<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Main</title><link href="ocean.css" rel="stylesheet" type="text/css" title="Ocean" /><script src="haddock-util.js" type="text/javascript"></script><script type="text/javascript">//<![CDATA[
window.onload = function () {pageLoad();setSynopsis("mini_Main.html");};
//]]>
</script></head><body><div id="package-header"><ul class="links" id="page-menu"><li><a href="index.html">Contents</a></li><li><a href="doc-index.html">Index</a></li></ul><p class="caption empty">&nbsp;</p></div><div id="content"><div id="module-header"><table class="info"><tr><th>Safe Haskell</th><td>Safe-Inferred</td></tr></table><p class="caption">Main</p></div><div id="description"><p class="caption">Description</p><div class="doc"><p>Descri&#231;&#227;o : M&#243;dulo de Haskell referente &#224; primeira tarefa do projeto de LI.
Copyright : Miguel Quaresma <a href="miguelquaresma97@gmail.com">miguelquaresma97@gmail.com</a>
			Jo&#227;o Nogueira
</p><p>Conjunto de fun&#231;&#245;es respons&#225;veis por verificar se o mapa e as coordenadas recebidos como input respeitam os requisitos estabelecidos, devolvendo OK caso
estes sejam v&#225;lidos ou, caso contr&#225;rio, o n&#250;mero da linha onde ocorre o primeiro erro.
</p></div></div><div id="synopsis"><p id="control.syn" class="caption expander" onclick="toggleSection('syn')">Synopsis</p><ul id="section.syn" class="hide" onclick="toggleSection('syn')"><li class="src short"><a href="#v:main">main</a> :: IO ()</li><li class="src short"><a href="#v:inStr">inStr</a> :: String -&gt; [String]</li><li class="src short"><a href="#v:outStr">outStr</a> :: [String] -&gt; String</li><li class="src short"><a href="#v:tarefa1">tarefa1</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:correTestes">correTestes</a> :: IO ()</li><li class="src short"><a href="#v:correTeste">correTeste</a> :: ([String] -&gt; [String]) -&gt; String -&gt; IO ()</li><li class="src short"><a href="#v:dividemapa">dividemapa</a> :: [String] -&gt; ([String], [String])</li><li class="src short"><a href="#v:verificaTudo">verificaTudo</a> :: ([String], [String]) -&gt; String</li><li class="src short"><a href="#v:verificaMapa">verificaMapa</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:comparaErros">comparaErros</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:verificaInterior">verificaInterior</a> :: Int -&gt; [String] -&gt; Int</li><li class="src short"><a href="#v:verificaComprimento">verificaComprimento</a> :: Int -&gt; [String] -&gt; Int</li><li class="src short"><a href="#v:contornosCheck">contornosCheck</a> :: String -&gt; Bool</li><li class="src short"><a href="#v:verificarLados">verificarLados</a> :: String -&gt; Bool</li><li class="src short"><a href="#v:processacoordenadas">processacoordenadas</a> :: [String] -&gt; [(Int, Int)]</li><li class="src short"><a href="#v:verificaCoordenadas">verificaCoordenadas</a> :: [(Int, Int)] -&gt; Int -&gt; [String] -&gt; (Int, Int) -&gt; Int</li><li class="src short"><a href="#v:verificaCords">verificaCords</a> :: [String] -&gt; [(Int, Int)] -&gt; Int -&gt; [String] -&gt; (Int, Int) -&gt; Int</li><li class="src short"><a href="#v:dentroTabuleiro">dentroTabuleiro</a> :: (Int, Int) -&gt; [(Int, Int)] -&gt; Int -&gt; Int</li><li class="src short"><a href="#v:posicaoValida">posicaoValida</a> :: [String] -&gt; Int -&gt; [(Int, Int)] -&gt; Int</li><li class="src short"><a href="#v:posicoesRepetidas">posicoesRepetidas</a> :: [(Int, Int)] -&gt; Int -&gt; Int</li><li class="src short"><a href="#v:contaCaixas">contaCaixas</a> :: [String] -&gt; Int</li><li class="src short"><a href="#v:percorreCaixas">percorreCaixas</a> :: Int -&gt; Int -&gt; Int</li><li class="src short"><a href="#v:removeInv">removeInv</a> :: [String] -&gt; [String]</li><li class="src short"><a href="#v:remaux">remaux</a> :: String -&gt; Bool</li><li class="src short"><a href="#v:devolveInv">devolveInv</a> :: [String] -&gt; Int -&gt; Int</li><li class="src short"><a href="#v:devolveAux">devolveAux</a> :: String -&gt; Bool</li></ul></div><div id="interface"><h1>Documentation</h1><div class="top"><p class="src"><a name="v:main" class="def">main</a> :: IO ()</p></div><div class="top"><p class="src"><a name="v:inStr" class="def">inStr</a> :: String -&gt; [String]</p></div><div class="top"><p class="src"><a name="v:outStr" class="def">outStr</a> :: [String] -&gt; String</p></div><div class="top"><p class="src"><a name="v:tarefa1" class="def">tarefa1</a> :: [String] -&gt; [String]</p></div><div class="top"><p class="src"><a name="v:correTestes" class="def">correTestes</a> :: IO ()</p><div class="doc"><p>Corre todos os testes de um determinado diret&#243;rio automaticamente, recorrendo &#224; fun&#231;&#227;o correTeste
</p></div></div><div class="top"><p class="src"><a name="v:correTeste" class="def">correTeste</a> :: ([String] -&gt; [String]) -&gt; String -&gt; IO ()</p><div class="doc"><p>Corre um teste e compara o resultado obtido com o esperado
</p></div></div><div class="top"><p class="src"><a name="v:dividemapa" class="def">dividemapa</a> :: [String] -&gt; ([String], [String])</p><div class="doc"><p>Divide o ficheiro em duas partes a primeira contendo o mapa e a segunda as coordenadas
</p></div></div><div class="top"><p class="src"><a name="v:verificaTudo" class="def">verificaTudo</a> :: ([String], [String]) -&gt; String</p><div class="doc"><p>Faz check de todos os erros (mapa e coordenadas) ao mesmo tempo e devolve a primeira linha onde h&#225; erro ou devolve OK caso n&#227;o haja nenhum
</p></div></div><div class="top"><p class="src"><a name="v:verificaMapa" class="def">verificaMapa</a> :: [String] -&gt; Int</p><div class="doc"><p>Executa todos os testes de verifica&#231;&#227;o do mapa
</p></div></div><div class="top"><p class="src"><a name="v:comparaErros" class="def">comparaErros</a> :: [String] -&gt; Int</p><div class="doc"><p>Compara as linhas onde ha erros e devolve a linha que vem primeiro
</p></div></div><div class="top"><p class="src"><a name="v:verificaInterior" class="def">verificaInterior</a> :: Int -&gt; [String] -&gt; Int</p><div class="doc"><p>Verifica se ha algum caracter do mapa que n&#227;o seja (.), (#), (espa&#231;o)
</p></div></div><div class="top"><p class="src"><a name="v:verificaComprimento" class="def">verificaComprimento</a> :: Int -&gt; [String] -&gt; Int</p><div class="doc"><p>Verifica se todas linhas do mapa t&#234;m o mesmo comprimento
</p></div></div><div class="top"><p class="src"><a name="v:contornosCheck" class="def">contornosCheck</a> :: String -&gt; Bool</p><div class="doc"><p>Verifica se todos os caracteres da primeira/ultima linha sao cardinais (#)
</p></div></div><div class="top"><p class="src"><a name="v:verificarLados" class="def">verificarLados</a> :: String -&gt; Bool</p><div class="doc"><p>Verifica se os contornos laterais s&#227;o cardinais (#)
</p></div></div><div class="top"><p class="src"><a name="v:processacoordenadas" class="def">processacoordenadas</a> :: [String] -&gt; [(Int, Int)]</p><div class="doc"><p>Converte a lista de coordenadas, ainda em lista de <em>strings</em>, numa lista de pares de <em>Int</em>s 
</p></div></div><div class="top"><p class="src"><a name="v:verificaCoordenadas" class="def">verificaCoordenadas</a> :: [(Int, Int)] -&gt; Int -&gt; [String] -&gt; (Int, Int) -&gt; Int</p><div class="doc"><p>Devolve o primeiro par de coordenadas onde h&#225; erro
</p></div></div><div class="top"><p class="src"><a name="v:verificaCords" class="def">verificaCords</a> :: [String] -&gt; [(Int, Int)] -&gt; Int -&gt; [String] -&gt; (Int, Int) -&gt; Int</p></div><div class="top"><p class="src"><a name="v:dentroTabuleiro" class="def">dentroTabuleiro</a> :: (Int, Int) -&gt; [(Int, Int)] -&gt; Int -&gt; Int</p><div class="doc"><p>Verifica se as coordenadas correspondem a pontos dentro do tabuleiro
</p></div></div><div class="top"><p class="src"><a name="v:posicaoValida" class="def">posicaoValida</a> :: [String] -&gt; Int -&gt; [(Int, Int)] -&gt; Int</p><div class="doc"><p>Verifica se as coordenadas coincidem com partes v&#225;lidas do mapa
</p></div></div><div class="top"><p class="src"><a name="v:posicoesRepetidas" class="def">posicoesRepetidas</a> :: [(Int, Int)] -&gt; Int -&gt; Int</p><div class="doc"><p>Procura por coordenadas repetidas na lista e devolve o primeiro par que se repita
</p></div></div><div class="top"><p class="src"><a name="v:contaCaixas" class="def">contaCaixas</a> :: [String] -&gt; Int</p><div class="doc"><p>Conta o n&#250;mero de pontos (.) no mapa obtendo assim o n&#250;mero de caixas esperadas 
</p></div></div><div class="top"><p class="src"><a name="v:percorreCaixas" class="def">percorreCaixas</a> :: Int -&gt; Int -&gt; Int</p><div class="doc"><p>Devolve a linha onde est&#225; a primeira coordenada a mais
</p></div></div><div class="top"><p class="src"><a name="v:removeInv" class="def">removeInv</a> :: [String] -&gt; [String]</p><div class="doc"><p>Remove a coordenadas inv&#225;lidas (com um so nro; com caracteres que n&#227;o s&#227;o nros ou linhas vazias)
</p></div></div><div class="top"><p class="src"><a name="v:remaux" class="def">remaux</a> :: String -&gt; Bool</p></div><div class="top"><p class="src"><a name="v:devolveInv" class="def">devolveInv</a> :: [String] -&gt; Int -&gt; Int</p><div class="doc"><p>Percorre as coordenadas ainda em <em>string</em> e devolve a linha, caso haja, do primeiro par com caracteres inv&#225;lidos
</p></div></div><div class="top"><p class="src"><a name="v:devolveAux" class="def">devolveAux</a> :: String -&gt; Bool</p></div></div></div><div id="footer"><p>Produced by <a href="http://www.haskell.org/haddock/">Haddock</a> version 2.13.2</p></div></body></html>